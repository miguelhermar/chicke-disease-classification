## dvc controls and tracks the pipeline, whether it has run or not, etc.
# dvc runs on top of git so make sure to initialize git before running dvc.yaml dile
# 1. dvc init
# 2. dvc repro


stages:
  data_ingestion:
    cmd: python src/cnnClassifier/pipeline/stage_01_data_ingestion.py
    deps: # on what files it depends on
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion/Chicken-fecal-images

    

  prepare_base_model:
    cmd: python src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
    deps:
      - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml
    params: # included in config_entity file
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model

    

  training:
    cmd: python src/cnnClassifier/pipeline/stage_03_training.py
    deps:
      - src/cnnClassifier/pipeline/stage_03_training.py
      - src/cnnClassifier/components/prepare_callbacks.py
      - config/config.yaml
      - artifacts/data_ingestion/Chicken-fecal-images
      - artifacts/prepare_base_model
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
    outs:
      - artifacts/training/model.h5


    
  evaluation:
    cmd: python src/cnnClassifier/pipeline/stage_04_evaluation.py
    deps:
      - src/cnnClassifier/pipeline/stage_04_evaluation.py
      - config/config.yaml
      - artifacts/data_ingestion/Chicken-fecal-images
      - artifacts/training/model.h5
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
    - scores.json:
        cache: false